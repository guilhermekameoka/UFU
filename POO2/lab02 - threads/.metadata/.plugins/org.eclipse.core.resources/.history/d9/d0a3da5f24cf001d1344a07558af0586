import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class ThreadPool {

    public static void main(String[] args) throws InterruptedException {
        String folderPath = "C:\\Users\\grkam\\OneDrive\\Área de Trabalho\\lab02\\txt";
        String extension = ".txt";
        int numThreads = Runtime.getRuntime().availableProcessors();

        ExecutorService executor = Executors.newFixedThreadPool(numThreads);
        try (Stream<Path> walk = Files.walk(Paths.get(folderPath))) {
            List<File> files = walk.filter(Files::isRegularFile)
                                   .map(Path::toFile)
                                   .filter(f -> f.getName().endsWith(extension))
                                   .collect(Collectors.toList());

            for (File file : files) {
                executor.execute(() -> {
                    try {
                        long count = Files.lines(file.toPath()).count();
                        System.out.println(file.getName() + ": " + count);
                    } catch (IOException e) {
                        System.err.println("Erro ao ler o arquivo: " + file.getName());
                        e.printStackTrace();
                    }
                });
            }
        } catch (IOException e) {
            System.err.println("Erro ao listar arquivos no diretório: " + folderPath);
            e.printStackTrace();
        }

        executor.shutdown();
        executor.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);
    }
}